
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                Int        @id @default(autoincrement()) // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
  email             String     @unique // Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É–Ω–∏–∫–∞–ª—å–Ω—ã–π
  name              String? // –ò–º—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  password          String? // –•—ç—à –ø–∞—Ä–æ–ª—è (–µ—Å–ª–∏ –Ω–µ OAuth)
  role              Role       @default(USER) // –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (USER –∏–ª–∏ ADMIN)
  isBlocked         Boolean    @default(false) // –§–ª–∞–≥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  emailVerified     Boolean    @default(false)
  verificationToken String?
  createdAt         DateTime   @default(now()) // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
  updatedAt         DateTime   @updatedAt // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  cartItems         CartItem[] // –°–≤—è–∑—å —Å –∫–æ—Ä–∑–∏–Ω–æ–π (–æ–¥–∏–Ω –∫–æ –º–Ω–æ–≥–∏–º)
  orders            Order[] // –°–≤—è–∑—å —Å –∑–∞–∫–∞–∑–∞–º–∏ (–æ–¥–∏–Ω –∫–æ –º–Ω–æ–≥–∏–º)
  sessions          Session[] // –°–≤—è–∑—å —Å —Å–µ—Å—Å–∏—è–º–∏ NextAuth
}

model Session {
  id           Int      @id @default(autoincrement()) // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —Å–µ—Å—Å–∏–∏
  userId       Int // –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  expires      DateTime // –ö–æ–≥–¥–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —Å–µ—Å—Å–∏—è
  sessionToken String   @unique // –¢–æ–∫–µ–Ω –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  // –°–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî –∫–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
}

enum Role {
  USER // –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  ADMIN // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
}

model Category {
  id       Int       @id @default(autoincrement()) // ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  name     String    @unique // –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (—É–Ω–∏–∫–∞–ª—å–Ω–æ–µ)
  imageUrl String? // –¥–ª—è –¥–æ–±–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ
  products Product[] // –°–≤—è–∑—å —Å —Ç–æ–≤–∞—Ä–∞–º–∏ (–æ–¥–∏–Ω –∫–æ –º–Ω–æ–≥–∏–º)
}

model Product {
  id          Int     @id @default(autoincrement()) // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
  name        String // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
  description String? // –û–ø–∏—Å–∞–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  imageUrl    String? // –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (ufsUrl –æ—Ç UploadThing)
  stock       Int     @default(0) // –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å–∫–ª–∞–¥–µ
  categoryId  Int // –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é

  category  Category @relation(fields: [categoryId], references: [id])
  createdAt DateTime @default(now()) // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
  updatedAt DateTime @updatedAt // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏

  cartItems  CartItem[] // –°–≤—è–∑—å —Å –∫–æ—Ä–∑–∏–Ω–æ–π

  variants ProductVariant[]
}

model CartItem {
  id        Int     @id @default(autoincrement()) // ID –∑–∞–ø–∏—Å–∏ –∫–æ—Ä–∑–∏–Ω—ã
  userId    Int
  productId Int
  variantId Int?    // —Å–≤—è–∑—å —Å ProductVariant
  quantity  Int     @default(1)

  user      User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product         @relation(fields: [productId], references: [id])
  variant   ProductVariant? @relation(fields: [variantId], references: [id]) // üî• –¥–æ–±–∞–≤–ª—è–µ–º —Å–≤—è–∑—å
}

//–ú–æ–¥–µ–ª—å Order ‚Äî –ó–∞–∫–∞–∑—ã
model Order {
  id         Int         @id @default(autoincrement()) // ID –∑–∞–∫–∞–∑–∞
  userId     Int // –ö—Ç–æ —Å–¥–µ–ª–∞–ª –∑–∞–∫–∞–∑
  status     OrderStatus @default(NEW) // –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
  createdAt  DateTime    @default(now()) // –ö–æ–≥–¥–∞ —Å–æ–∑–¥–∞–Ω
  updatedAt  DateTime    @updatedAt // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  totalPrice Float // –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞
  user       User        @relation(fields: [userId], references: [id]) // –°–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  items      OrderItem[] // –°–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (–º–Ω–æ–≥–∏–µ –∫ –æ–¥–Ω–æ–º—É)
}

//üì¶ –ú–æ–¥–µ–ª—å OrderItem ‚Äî –¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ
// üì¶ OrderItem ‚Äî –ø–æ–∑–∏—Ü–∏—è –∑–∞–∫–∞–∑–∞
model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  variantId Int
  quantity  Int
  price     Float

  order   Order          @relation(fields: [orderId], references: [id], onDelete: Cascade)
  variant ProductVariant @relation(fields: [variantId], references: [id], onDelete: Cascade)
}

//üìã Enum OrderStatus ‚Äî –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤
enum OrderStatus {
  NEW // –ù–æ–≤—ã–π –∑–∞–∫–∞–∑
  PROCESSING // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
  COMPLETED // –ó–∞–≤–µ—Ä—à–µ–Ω
  CANCELLED // –û—Ç–º–µ–Ω–µ–Ω
}

model ProductVariant {
  id        Int      @id @default(autoincrement())
  label     String?  // —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ ("1 –∫–≥", "XL", "–ö—Ä–∞—Å–Ω—ã–π") ‚Äî –µ—Å–ª–∏ —Ö–æ—á–µ—à—å
  color     String?  // —Ü–≤–µ—Ç —Ç–æ–≤–∞—Ä–∞
  size      String?  // —Ä–∞–∑–º–µ—Ä —Ç–æ–≤–∞—Ä–∞
  imageUrl  String?  // —Ñ–æ—Ç–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞
  price     Float
  stock     Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  
  cartItems CartItem[]
  orderItems OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
